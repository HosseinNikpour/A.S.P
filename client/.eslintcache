[{"C:\\source\\ASP\\client\\src\\index.js":"1","C:\\source\\ASP\\client\\src\\App.js":"2","C:\\source\\ASP\\client\\src\\components\\PrivateRoute.js":"3","C:\\source\\ASP\\client\\src\\components\\login.js":"4","C:\\source\\ASP\\client\\src\\forms\\baseInfo\\index.js":"5","C:\\source\\ASP\\client\\src\\forms\\user\\index.js":"6","C:\\source\\ASP\\client\\src\\forms\\static.js":"7","C:\\source\\ASP\\client\\src\\forms\\baseInfo\\statics.js":"8","C:\\source\\ASP\\client\\src\\api\\index.js":"9","C:\\source\\ASP\\client\\src\\components\\TableContainer.js":"10","C:\\source\\ASP\\client\\src\\forms\\user\\statics.js":"11","C:\\source\\ASP\\client\\src\\forms\\organizational\\index.js":"12","C:\\source\\ASP\\client\\src\\forms\\keyword\\index.js":"13","C:\\source\\ASP\\client\\src\\forms\\keyword\\statics.js":"14","C:\\source\\ASP\\client\\src\\forms\\colleague\\index.js":"15","C:\\source\\ASP\\client\\src\\forms\\projects\\index.js":"16","C:\\source\\ASP\\client\\src\\forms\\trading_commission\\index.js":"17","C:\\source\\ASP\\client\\src\\forms\\trading_commission\\statics.js":"18","C:\\source\\ASP\\client\\src\\forms\\colleague\\statics.js":"19","C:\\source\\ASP\\client\\src\\forms\\projects\\statics.js":"20","C:\\source\\ASP\\client\\src\\forms\\contract\\index.js":"21","C:\\source\\ASP\\client\\src\\forms\\call\\index.js":"22","C:\\source\\ASP\\client\\src\\forms\\call\\statics.js":"23","C:\\source\\ASP\\client\\src\\forms\\organizational\\statics.js":"24","C:\\source\\ASP\\client\\src\\forms\\contract\\statics.js":"25","C:\\source\\ASP\\client\\src\\forms\\supplement\\index.js":"26","C:\\source\\ASP\\client\\src\\forms\\supplement\\statics.js":"27","C:\\source\\ASP\\client\\src\\forms\\file_MNG\\index.js":"28","C:\\source\\ASP\\client\\src\\forms\\file_MNG\\statics.js":"29","C:\\source\\ASP\\client\\src\\forms\\file_MNG\\rpt.js":"30","C:\\source\\ASP\\client\\src\\forms\\permission\\index.js":"31","C:\\source\\ASP\\client\\src\\forms\\permission\\statics.js":"32","C:\\source\\ASP\\client\\src\\forms\\commingSoon.js":"33","C:\\source\\ASP\\client\\src\\forms\\mainPage.js":"34"},{"size":566,"mtime":1607869768874,"results":"35","hashOfConfig":"36"},{"size":11922,"mtime":1622820537253,"results":"37","hashOfConfig":"36"},{"size":1750,"mtime":1611908685392,"results":"38","hashOfConfig":"36"},{"size":3829,"mtime":1613377165242,"results":"39","hashOfConfig":"36"},{"size":9181,"mtime":1618820936296,"results":"40","hashOfConfig":"36"},{"size":11581,"mtime":1622862159317,"results":"41","hashOfConfig":"36"},{"size":1352,"mtime":1623160989851,"results":"42","hashOfConfig":"36"},{"size":1179,"mtime":1618820724174,"results":"43","hashOfConfig":"36"},{"size":3225,"mtime":1622818577773,"results":"44","hashOfConfig":"36"},{"size":3521,"mtime":1622826599551,"results":"45","hashOfConfig":"36"},{"size":1058,"mtime":1622861897715,"results":"46","hashOfConfig":"36"},{"size":22389,"mtime":1622860753065,"results":"47","hashOfConfig":"36"},{"size":9540,"mtime":1622861402178,"results":"48","hashOfConfig":"36"},{"size":643,"mtime":1618820916306,"results":"49","hashOfConfig":"36"},{"size":17664,"mtime":1622862085414,"results":"50","hashOfConfig":"36"},{"size":16591,"mtime":1622860916747,"results":"51","hashOfConfig":"36"},{"size":10377,"mtime":1623163390522,"results":"52","hashOfConfig":"36"},{"size":937,"mtime":1618674799646,"results":"53","hashOfConfig":"36"},{"size":2722,"mtime":1617853401304,"results":"54","hashOfConfig":"36"},{"size":1833,"mtime":1618671918594,"results":"55","hashOfConfig":"36"},{"size":31943,"mtime":1623161169381,"results":"56","hashOfConfig":"36"},{"size":23377,"mtime":1622864470602,"results":"57","hashOfConfig":"36"},{"size":2891,"mtime":1618667355382,"results":"58","hashOfConfig":"36"},{"size":2655,"mtime":1618675348672,"results":"59","hashOfConfig":"36"},{"size":4894,"mtime":1618735550528,"results":"60","hashOfConfig":"36"},{"size":14134,"mtime":1623162801344,"results":"61","hashOfConfig":"36"},{"size":1171,"mtime":1618666464072,"results":"62","hashOfConfig":"36"},{"size":8407,"mtime":1618299676599,"results":"63","hashOfConfig":"36"},{"size":241,"mtime":1615717691910,"results":"64","hashOfConfig":"36"},{"size":5123,"mtime":1618316470873,"results":"65","hashOfConfig":"36"},{"size":10060,"mtime":1618326609143,"results":"66","hashOfConfig":"36"},{"size":840,"mtime":1618573729770,"results":"67","hashOfConfig":"36"},{"size":645,"mtime":1618643555602,"results":"68","hashOfConfig":"36"},{"size":8587,"mtime":1619124448557,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"hnvhab",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\source\\ASP\\client\\src\\index.js",[],["151","152"],"C:\\source\\ASP\\client\\src\\App.js",["153","154"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link ,useLocation } from \"react-router-dom\";\n\nimport logo from './assets/img/brand/asp.png';\nimport profile from './assets/img/brand/user.png';\nimport logout from './assets/img/brand/logout.png';\n\nimport User from './forms/user/index';\nimport BaseInfo from './forms/baseInfo/index';\nimport Organizational from './forms/organizational/index';\nimport Keyword from './forms/keyword/index';\nimport Colleague from './forms/colleague/index';\nimport Projects from './forms/projects/index';\nimport Trading_commission from './forms/trading_commission/index';\nimport Contract from './forms/contract/index';\nimport Call from './forms/call/index';\nimport Supplement from './forms/supplement/index';\nimport FileMNG from './forms/file_MNG/index';\nimport FileMNGrpt from './forms/file_MNG/rpt';\nimport Permission from './forms/permission/index';\nimport CommingSoon from './forms/commingSoon';\n// import Company1 from './forms/company/index3';\n// import Company2 from './forms/company/index2A';\n// import Company3 from './forms/company/index2T';\nimport MainPage from './forms/mainPage';\n\nimport './assets/css/antd.rtl.css';\nimport './assets/vendor/nucleo/css/nucleo.rtl.css';\nimport './assets/vendor/@fortawesome/fontawesome-free/css/all.min.css';\nimport './assets/css/argon.rtl.css';\nimport './assets/fonts/IRANSans/style.css';\nimport './assets/css/custom.css';\n\nimport PrivateRoute from './components/PrivateRoute'\nimport Login from './components/login'\n\nfunction App() {\n  const [selectedNav,setSelectedNav]= useState(0);\n  const [subMenu, setSubMenu] = useState(0);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : undefined;\n    if (user){\n      setCurrentUser({ name: user.name, lastLoginDate: user.last_login, role_id: user.role_id });\n    }\n    else {\n\n     // console.log('aaaa');\n    }\n   // console.log(currentUser);\n  }, [])\nconst signOut=()=>{\n  setCurrentUser({});\n  localStorage.clear();\n  window.location.reload();\n \n}\n  return (\n    <div className=\"App\" dir='RTL'>\n\n      <Router>\n\n        <nav className=\"sidenav navbar navbar-vertical  fixed-left  navbar-expand-xs navbar-light bg-white\" id=\"sidenav-main\">\n          <div className=\"scrollbar-inner\">\n\n            <div className=\"sidenav-header align-items-center\">\n              {/* <input type=\"button\" onClick={(e)=>e.target.classList.contains(\"\")} value=\"------\" /> */}\n              <span className=\"navbar-brand\" >\n              <Link to=\"/\" >\n                  <img src={logo} className=\"navbar-brand-img\" alt=\"...\" />\n                  </Link>\n              </span>\n            </div>\n            <div className=\"navbar-inner\">\n\n              <div className=\"collapse navbar-collapse\" id=\"sidenav-collapse-main\">\n\n                <ul className=\"navbar-nav\">\n                 \n                 \n                  <li className=\"nav-item\" onClick={() => setSubMenu(1)}>\n                    <a className=\"nav-link\">\n                      <i className=\"custom-nav-img basicinformation\"></i>\n                      <span className=\"nav-link-text\">اطلاعات پایه</span></a>\n                    {subMenu === 1 && <ul className=\"nav-sub-menu\">\n                    <li className=\"nav-item1\" onClick={()=>setSelectedNav(1)}>\n                        <Link to=\"/colleague\" className={selectedNav===1?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">همکاران</span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(2)}>\n                        <Link to=\"/organizational\" className={selectedNav===2?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">سازمانهای همکار</span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(3)}>\n                        <Link to=\"/projects\" className={selectedNav===3?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">پروژه ها</span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(4)}>\n                        <Link to=\"/contract\" className={selectedNav===4?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">قراردادها</span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(5)}>\n                        <Link to=\"/supplement\" className={selectedNav===5?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">الحاقیه ها</span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(7)}>\n                        <Link to=\"/trading_commission\" className={selectedNav===7?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">کمیسیون معاملات  </span></Link>\n                      </li>\n                      <li className=\"nav-item1\" onClick={()=>setSelectedNav(6)}>\n                        <Link to=\"/call\" className={selectedNav===6?\"nav-sub-link selected-nav\":\"nav-sub-link\"}>\n                          <span className=\"nav-link-text1\">فراخوان ها</span></Link>\n                      </li>\n                      \n                      \n                    </ul>}\n\n                  </li>\n                  <li className=\"nav-item\" onClick={()=>setSelectedNav(8)}>\n                 \n                    <Link to=\"/commingSoon\" className= {selectedNav===8?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"fa fa-tasks text-primary\"></i>\n                      <span className=\"nav-link-text offline\">کارتابل پویا</span></Link>\n                  </li> \n                  <li className=\"nav-item\" onClick={()=>setSelectedNav(9)}>\n                    <Link to=\"/commingSoon\" className= {selectedNav===9?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"fas fa-chart-line text-primary\"></i>\n                      <span className=\"nav-link-text offline\">گزارشات</span>\n                    </Link>\n                  </li>\n    \n                  <li className=\"nav-item\">\n                    <hr className=\"my-3\" />\n                    <h4 className=\"navbar-heading p-0 text-muted\" style={{ marginRight: '20px' }}>\n                      <span className=\"docs-normal\">راهبر سامانه</span>\n                    </h4>\n                  </li>\n                  <li className=\"nav-item\" onClick={()=>setSelectedNav(10)}>\n                    <Link to=\"/user\" className= {selectedNav===10?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"custom-nav-img usermanagmenr\"></i>\n                      <span className=\"nav-link-text\">مدیریت کاربران</span></Link>\n                  </li>\n                  <li className=\"nav-item\" onClick={()=>setSelectedNav(11)}>\n                    <Link to=\"/permission\" className= {selectedNav===11?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"custom-nav-img permisstion\"></i>\n                      <span className=\"nav-link-text\">مدیریت دسترسی ها</span></Link>\n                  </li>\n                  <li className=\"nav-item\" onClick={()=>setSelectedNav(12)}>\n                    <Link to=\"/baseInfo\" className= {selectedNav===12?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"custom-nav-img basictable\"></i>\n                      <span className=\"nav-link-text\">جداول پایه</span></Link>\n                  </li>\n                    <li className=\"nav-item\" onClick={()=>setSelectedNav(13)}>\n                    <Link to=\"/keyword\" className= {selectedNav===13?\"nav-link selected-nav\":\"nav-link\"}>\n                      <i className=\"custom-nav-img keywords\"></i>\n                      <span className=\"nav-link-text\">بانک کلید واژه ها</span></Link>\n                  </li>ّ\n                </ul>\n\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"main-content\" id=\"panel\">\n\n          <nav className=\"navbar navbar-top navbar-expand navbar-dark bg-primary border-bottom\">\n            <div className=\"container-fluid\">\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <div class=\"head-all\" >سامانه اطلاعات مدیریت پروژه (نسخه پایه) </div>\n                \n                <ul className=\"navbar-nav align-items-center  ml-md-auto login-container \">\n                  <li className=\"nav-item dropdown\">\n                    <span className=\"nav-link\" >\n                      <div className='nav-login'>\n                      <img src={profile} className=\"profile\" alt=\"...\" />\n\n                        <span className=\"\">{currentUser ? currentUser.name : ''}</span>\n                      </div>\n                      {/* <div className=\"media align-items-center\">\n                        <span className=\"avatar avatar-sm rounded-circle\">\n\n                        </span>\n                        <div className=\"media-body  ml-2  d-none d-lg-block\">\n                          <span className=\"mb-0 text-sm  font-weight-bold\">{JSON.parse(localStorage.getItem('user')).name}</span>\n                        </div>\n                      </div>*/}\n                    </span>\n\n                  </li>\n                  <div onClick={()=>signOut()}>\n                  <img src={logout} className=\"logout\" alt=\"...\" />\n\n                  <span className=\"exit\" >خروج</span>\n                  </div>\n                </ul>\n\n              </div>\n            </div>\n          </nav>\n\n          <div className=\"header bg-light pb-6\">\n            <Switch>\n              {/* <Route path=\"/user\"> <User /> </Route> */}\n              <PrivateRoute path=\"/user\" component={User} role=\"admin\" />\n              <PrivateRoute path=\"/baseInfo\" component={BaseInfo} role=\"admin\" />\n           \n              <PrivateRoute path=\"/organizational\" component={Organizational} role=\"\" />\n              <PrivateRoute path=\"/keyword\" component={Keyword} role=\"admin\" />\n              <PrivateRoute path=\"/colleague\" component={Colleague} role=\"\" />\n              <PrivateRoute path=\"/projects\" component={Projects} role=\"\" />\n              <PrivateRoute path=\"/trading_commission\" component={Trading_commission} role=\"\" />\n              <PrivateRoute path=\"/contract\" component={Contract} role=\"\" />\n              <PrivateRoute path=\"/call\" component={Call} role=\"\" />\n              <PrivateRoute path=\"/supplement\" component={Supplement} role=\"\" />\n              <PrivateRoute path=\"/fileMng\" component={FileMNG} role=\"admin\" />\n              <PrivateRoute path=\"/fileMngRpt\" component={FileMNGrpt} role=\"admin\" />\n              <PrivateRoute path=\"/permission\" component={Permission} role=\"admin\" />\n              <PrivateRoute path=\"/commingSoon\" component={CommingSoon} role=\"\" />\n              {/* <PrivateRoute path=\"/company1\" component={Company1} role=\"admin\" />\n              <PrivateRoute path=\"/company2\" component={Company2} role=\"admin\" />\n              <PrivateRoute path=\"/company3\" component={Company3} role=\"admin\" /> */}\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <PrivateRoute path=\"/\" component={MainPage} />\n\n            </Switch>\n          </div>\n\n\n        </div>\n        <div id=\"footer\"> <a href=\"mailto: info@bstict.com\">طراحی و پیاده سازی : BSTICT </a>  </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\source\\ASP\\client\\src\\components\\PrivateRoute.js",["155"],"import React, { useState,useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { verifyToken } from '../api/index'\r\n\r\nconst PrivateRoute = (props) => {\r\n    const [authenticated, setAuthenticated] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : undefined,\r\n            token = localStorage.getItem('token') ? localStorage.getItem('token') : undefined;\r\n        if (!user || !token) {\r\n            setAuthenticated(-1);\r\n        }\r\n        else {\r\n            verifyToken({ user, token }).then(response => {\r\n                //todo : handel permission for admin role ===>props.role=='admin'\r\n                //todo : check the response and then if it is  ok set state\r\n                ///    console.log(response);\r\n                //  console.log(\"user.role\", user);\r\n                //   console.log(\"page.role\", this.props.role);\r\n\r\n                if (typeof props.onLogin === 'function')\r\n                    props.onLogin(5);\r\n                if (props.role && props.role === 'admin')\r\n                    if (user.role === \"admin\")\r\n                        setAuthenticated(1);\r\n                    else\r\n                        setAuthenticated(-1);\r\n                else\r\n                    setAuthenticated(1);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                setAuthenticated(-1);\r\n            });\r\n        }\r\n    }, [])\r\n    if (authenticated === -1)\r\n        return (<Redirect to={{ pathname: '/login', state: { from: props.location } }} />)\r\n    else if (authenticated > 0)\r\n        return (<Route {...props} />)\r\n    return (<div></div>)\r\n}\r\nexport default PrivateRoute;","C:\\source\\ASP\\client\\src\\components\\login.js",[],"C:\\source\\ASP\\client\\src\\forms\\baseInfo\\index.js",["156","157","158","159","160"],"import React, { useState, useEffect, useRef } from 'react';\nimport { getItems, insertItem, deleteItem, updateItem, getItem } from '../../api/index';\nimport TableContainer from \"../../components/TableContainer\";\nimport { columns, entityName, groups, pageHeader } from './statics';\nimport Static, { checkPermission } from '../static';\nimport { message } from 'antd';\n\nconst BaseInfo = (props) => {\n    const BoxRef = useRef(null), GridRef = useRef(null);;\n    const [orgData, setOrgData] = useState([]);\n    const [data, setData] = useState([]);\n    const [obj, setObj] = useState({});\n     const [per, setPer] = useState({});\n    const [mode, setMode] = useState('');\n    const [grpSelected, setGrpSelected] = useState(1);\n    const [errors, setErrors] = useState({});\n\n    const getData = () => {\n        setMode('');\n        GridRef.current.scrollIntoView({ behavior: 'smooth' });\n\n        Promise.all([getItems(entityName), getItem(1, \"permission\")]).then((response) => {\n                let cp = checkPermission(response[0].data);\n                if (cp.canRead) {\n                    setPer(cp);\n\n     \n            setOrgData(response[0].data);\n            setData(response[0].data.filter(a => a.groupid == grpSelected));\n            setObj({});\n            setErrors({});\n                }\n      \n        })\n    }\n    useEffect(() => {\n        getData();\n    }, [])\n\n\n    const btnNewClick = () => {\n        setMode('new');\n        // BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    const saveBtnClick = () => {\n\n        let err = {};\n        columns.filter(a => a.req).forEach(a => {\n            err[a.accessor] = obj[a.accessor] ? false : true;\n        })\n\n\n        if (Object.values(err).length > 0) {\n            setErrors(err);\n            BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n            alert(\"لطفا موارد الزامی را وارد کنید\");\n        }\n        else {\n            obj.groupid = grpSelected;\n            if (mode === 'new') {\n                insertItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        //alert('خطا در ذخیره سازی اطلاعات');\n                        message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                        console.log(response.data.message);\n                    }\n\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n            else if (mode === 'edit') {\n                updateItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        // alert('خطا در ذخیره سازی اطلاعات');\n                        message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                        console.log(response.data.message);\n                    }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n        }\n    }\n    const deleteBtnClick = (item) => {\n\n        deleteItem(item.id, entityName).then(a => {\n            getData();\n        });\n\n    }\n    const displayBtnClick = (item) => {\n        setMode('display');\n        // BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const editBtnClick = (item) => {\n        setMode('edit');\n        //BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const cancelBtnClick = () => {\n        setMode('');\n        //  GridRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    const typeChange = (event) => {\n        let index = event.nativeEvent.target.selectedIndex;\n        let value = event.nativeEvent.target[index].value;\n        // let data = this.state.data;\n        //let rr = orgData.filter(a => a.groupid == value);\n        setData(orgData.filter(a => a.groupid == value));\n        setGrpSelected(value);\n    }\n    return (<div className=\"container-fluid\">\n        <div className=\"row\" style={{ paddingTop: '15px' }}>\n            <div className=\"col-7\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\" ref={GridRef}>\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">{pageHeader}</h3>\n                            </div>\n                            <div className='col-5 ml-auto'>\n\n                                <select className=\"form-control\" onChange={typeChange}\n                                    style={{ 'width': '200px', marginLeft: '30px' }} >\n                                    {groups.map(a => <option key={a.value} value={a.value}>{a.title} </option>)}\n                                </select>\n                            </div>\n                            {per.canAdd && <div className=\"col text-right\">\n                                <button className=\"btn btn-icon btn-primary\" type=\"button\" onClick={btnNewClick}>\n                                    <span className=\"btn-inner--icon\"><i className=\"fas fa-plus\"></i></span>\n                                    <span className=\"btn-inner--text\">مورد جدید</span>\n                                </button>\n\n                            </div>}\n                        </div>\n                    </div>\n                    <div className='table-responsive'>\n                        <TableContainer columns={columns.filter(a => !a.notInGrid)} data={data}\n                              deleteClick={per.canEdit ? deleteBtnClick : undefined}\n                              displayClick={displayBtnClick}\n                              editClick={per.canEdit ? editBtnClick : undefined} />\n                    </div>\n                </div>\n            </div>\n\n            {mode !== '' && <div className=\"col\" ref={BoxRef}>\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\">\n\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">\n                                    {mode === 'new' ? 'اضافه کردن آیتم جدید' : mode === 'edit' ? 'ویرایش آیتم' : 'مشاهده آیتم'}\n                                </h3>\n                                <hr></hr>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className='card-body' style={{ marginTop: '-50px' }}>\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">عنوان</label>\n                                        <input className=\"form-control\" type=\"text\" value={obj.title}\n                                            onChange={(e) => setObj({ ...obj, title: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">ترتیب</label>\n                                        <input className=\"form-control\" type=\"number\" value={obj.sort}\n                                            onChange={(e) => setObj({ ...obj, sort: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    {mode !== \"display\" && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={saveBtnClick}>ذخیره</button>}\n                                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={cancelBtnClick}>انصراف</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    </div>)\n}\n\nexport default BaseInfo;","C:\\source\\ASP\\client\\src\\forms\\user\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\static.js",["161","162"],"C:\\source\\ASP\\client\\src\\forms\\baseInfo\\statics.js",[],"C:\\source\\ASP\\client\\src\\api\\index.js",[],"C:\\source\\ASP\\client\\src\\components\\TableContainer.js",["163","164"],"import React, { useState, useEffect } from \"react\"\r\nimport { useTable,useSortBy } from \"react-table\"\r\nimport { Menu, Dropdown, Popconfirm } from 'antd';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst TableContainer = ({ data, columns, deleteClick, editClick, displayClick ,downloadName }) => {\r\n  let [cRow, setCRow] = useState();\r\n\r\n\r\n\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  },useSortBy)\r\n\r\n  const menu = (\r\n    <Menu>\r\n      {editClick && <Menu.Item>\r\n\r\n        <div  className=\"edit-item\"  onClick={() => editClick(cRow)}>\r\n          {/* <i className=\"fa fa-edit\"  /> */}\r\n          \r\n        </div>\r\n      </Menu.Item>}\r\n      <Menu.Item>\r\n        <div  className=\"view-item\" onClick={() => displayClick(cRow)}>\r\n          {/* <i className=\"far fa-eye\"  /> */}\r\n         \r\n          \r\n        </div>\r\n      </Menu.Item>\r\n      {deleteClick && <Menu.Item>\r\n\r\n        <Popconfirm title=\"  آیا از حذف مطمئن هستید ؟\" okText=\"تایید\" cancelText=\"عدم تایید\"\r\n          onConfirm={() => deleteClick(cRow)}>\r\n          {/* <i className=\"far fa-trash-alt\" style={{ marginRight: '8px' }}></i> */}\r\n          <div className=\"delet-item\" >  </div>\r\n            </Popconfirm>\r\n        {/* <i className=\"far fa-trash-alt\"  />  */}\r\n\r\n\r\n      </Menu.Item>}\r\n\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <div >\r\n     {downloadName&& <CSVLink data={data} headers={columns.map(a=>({label:a.Header,key:a.accessor}))} filename={downloadName+'.csv'} className=\"download-list\" >  </CSVLink>}\r\n      <table {...getTableProps()} className='table align-items-center table-flush'>\r\n        <thead className='thead-light'>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}\r\n                 <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span></th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                })}\r\n                <td>\r\n                  <Dropdown overlay={menu} placement=\"bottomCenter\" arrow>\r\n                    <a className=\"ant-dropdown-link\" onClick={e => { e.preventDefault(); setCRow(row.original) }}>\r\n                      {/* عملیات  \r\n                 <i className='fas fa-angle-down'></i> */}\r\n                 ...\r\n                 </a>\r\n                  </Dropdown>\r\n                  {/* <i className=\"fa fa-edit\" onClick={() => editClick(row.original)} />\r\n                <i className=\"far fa-trash-alt\" style={{ marginRight: '8px' }} onClick={() => {  deleteClick(row.original) }}></i>\r\n                <i className=\"far fa-eye\" onClick={() => displayClick(row.original)} style={{ marginRight: '8px' }} ></i> */}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableContainer","C:\\source\\ASP\\client\\src\\forms\\user\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\organizational\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\keyword\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\keyword\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\colleague\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\projects\\index.js",["165"],"import React, { useState, useEffect, useRef } from 'react';\nimport { getItems, insertItem, deleteItem, updateItem, getItem } from '../../api/index';\nimport TableContainer from \"../../components/TableContainer\";\nimport { columns, entityName,pageHeader } from './statics';\nimport { message, Select } from 'antd';\nimport DatePicker from 'react-datepicker2';\nimport Static, { checkPermission } from '../static';\n\n\n\nconst Projects = (props) => {\n    const BoxRef = useRef(null), GridRef = useRef(null);;\n    const [per, setPer] = useState({});\n    const [data, setData] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [calc, setCalc] = useState({});\n    const [obj, setObj] = useState({});\n    const [mode, setMode] = useState('');\n    const [site_manager_options, setSite_manager_options] = useState([]);\n    const [project_manager_options, setProject_manager_options] = useState([]);\n    const [contractor_options, setContractor_options] = useState([]);\n    const [consultant_options, setConsultant_options] = useState([]);\n    const [employer_options, setEmployer_options] = useState([]);\n\n    const getData = () => {\n        setMode('');\n        GridRef.current.scrollIntoView({ behavior: 'smooth' });\n        Promise.all([getItems(entityName), getItems(\"organizational\"), getItems(\"colleague\") , getItem(3, \"permission\")]).then((response) => {\n            let cp = checkPermission(response[3].data);\n            if (cp.canRead) {\n                setPer(cp);\n            \n\n            setData(response[0].data);\n            setSite_manager_options(response[2].data.map(a => { return { key: a.id, label: a.name +' '+a.last_name, value: a.id, psite: a.phone_number  } }));\n            setProject_manager_options(response[2].data.map(a => { return { key: a.id, label: a.name +' '+a.last_name, value: a.id, pmanager: a.phone_number  } }));\n            setContractor_options(response[1].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n            setConsultant_options(response[1].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n            setEmployer_options(response[1].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n      \n        }\n      \n        })\n        setObj({});\n        setErrors({});\n    }\n    useEffect(() => {\n        getData();\n    }, [])\n\n\n    const btnNewClick = () => {\n        setMode('new');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    const saveBtnClick = () => {\n\n        let err = {};\n        columns.filter(a => a.req).forEach(a => {\n            if (a.type === 'lookup')\n                err[a.accessor + \"_id\"] = obj[a.accessor + \"_id\"] ? false : true;\n            else\n                err[a.accessor] = obj[a.accessor] ? false : true;\n        })\n\n\n        if (Object.values(err).filter(a => a).length > 0) {\n            setErrors(err);\n            BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n            alert(\"لطفا موارد الزامی را وارد کنید\");\n        }\n        else {\n\n            if (mode === 'new') {\n                insertItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                        message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                   else {\n                        //alert('خطا در ذخیره سازی اطلاعات');\n                        message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                        console.log(response.data.message);\n                    }\n                }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n            else if (mode === 'edit') {\n                updateItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                        message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                   else {\n                        // alert('خطا در ذخیره سازی اطلاعات');\n                        message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                        console.log(response.data.message);\n                    }\n                }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n        }\n    }\n    const deleteBtnClick = (item) => {\n\n        deleteItem(item.id, entityName).then(a => {\n            getData();\n        });\n\n    }\n    const displayBtnClick = (item) => {\n        setMode('display');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const editBtnClick = (item) => {\n        setMode('edit');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const cancelBtnClick = () => {\n        setMode('');\n        GridRef.current.scrollIntoView({ behavior: 'smooth' });\n\n    }\n    return (<div className=\"container-fluid\">\n        <div className=\"row\" style={{ paddingTop: '15px' }}>\n            <div className=\"col\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\" ref={GridRef}>\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">اطلاعات پروژه ها</h3>\n                            </div>\n                            {per.canAdd && <div className=\"col text-right\">\t\n                                <button className=\"btn btn-icon btn-primary\" type=\"button\" onClick={btnNewClick}>\n                                    <span className=\"btn-inner--icon\"><i className=\"fas fa-plus\"></i></span>\n                                    <span className=\"btn-inner--text\">مورد جدید</span>\n                                </button>\n\n                            </div>}\n                        </div>\n                    </div>\n                    <div className='table-responsive'>\n                        <TableContainer columns={columns.filter(a => !a.notInGrid)} data={data} downloadName={pageHeader}\n                         deleteClick={per.canEdit ? deleteBtnClick : undefined}\n                         displayClick={displayBtnClick}\n                         editClick={per.canEdit ? editBtnClick : undefined} />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"row\" style={{ paddingTop: '15px' }} ref={BoxRef}>\n            {mode !== '' && <div className=\"col\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\">\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">  {mode === 'new' ? 'اضافه کردن آیتم جدید' : mode === 'edit' ? 'ویرایش آیتم' : 'مشاهده آیتم'}</h3>\n                                <hr></hr>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='card-body' style={{ marginTop: '-50px' }}>\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">نام پروژه</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.title ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.title}\n                                            onChange={(e) => setObj({ ...obj, title: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">کد پروژه</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.project_code ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.project_code}\n                                            onChange={(e) => setObj({ ...obj, project_code: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">سرپرست کارگاه</label>\n                                        <Select className={errors.site_manager_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={site_manager_options}\n                                            value={obj.site_manager_id} onSelect={(values) => { setObj({ ...obj, site_manager_id: values }); setCalc({...calc , phonesite: site_manager_options.find(a => a.key === values).psite }) }}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شماره تماس</label>\n                                        <label className=\"form-control\">{calc.phonesite}</label>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col\">\n\t\t\t\t\t\t\t\t   <div className=\"form-group\">\n                                        <label className=\"form-control-label\">مدیر پروژه</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.project_manager_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={project_manager_options}\n                                            value={obj.project_manager_id} onSelect={(values) => { setObj({ ...obj, project_manager_id: values }); setCalc({...calc , phonemanager: project_manager_options.find(a => a.key === values).pmanager }) }}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شماره تماس</label>\n                                        <label className=\"form-control\">{calc.phonemanager}</label>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">آدرس پروژه</label>\n                                        <input className={errors.project_address ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.project_address}\n                                            onChange={(e) => setObj({ ...obj, project_address: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div><div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شماره دسترسی ضروری</label>\n                                        <input className={errors.required_number ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.required_number}\n                                            onChange={(e) => setObj({ ...obj, required_number: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div></div><div className=\"row\"><div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">پیمانکار</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.contractor_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={contractor_options}\n                                            value={obj.contractor_id} onSelect={(values) => setObj({ ...obj, contractor_id: values })}\n                                        />\n                                    </div>\n                                </div><div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">مشاور</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.consultant_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={consultant_options}\n                                            value={obj.consultant_id} onSelect={(values) => setObj({ ...obj, consultant_id: values })}\n                                        />\n                                    </div>\n                                </div></div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">کارفرما</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.employer_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={employer_options}\n                                            value={obj.employer_id} onSelect={(values) => setObj({ ...obj, employer_id: values })}\n                                        />\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                {mode !== \"display\" &&  <button type=\"button\" className=\"btn btn-outline-primary\" onClick={saveBtnClick}>ذخیره</button>}\n                                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={cancelBtnClick}>انصراف</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    </div>)\n}\n\nexport default Projects;","C:\\source\\ASP\\client\\src\\forms\\trading_commission\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\trading_commission\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\colleague\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\projects\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\contract\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\call\\index.js",["166"],"import React, { useState, useEffect, useRef } from 'react';\nimport { getItems, insertItem, deleteItem, updateItem, getItem } from '../../api/index';\nimport TableContainer from \"../../components/TableContainer\";\nimport { columns, entityName, pageHeader } from './statics';\nimport { message, Select } from 'antd';\nimport DatePicker from 'react-datepicker2';\nimport Static, { checkPermission } from '../static';\nimport moment from 'moment-jalaali'\nconst Call = (props) => {\n    const BoxRef = useRef(null), GridRef = useRef(null);;\n\n    const [data, setData] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [obj, setObj] = useState({});\n    const [mode, setMode] = useState('');\n    const [per, setPer] = useState({});\n    const [reference_options, setReference_options] = useState([]);\n    const [calc, setCalc] = useState({});\n    const [winning_company_options, setWinning_company_options] = useState([]);\n    const [guarantee_association_options, setGuarantee_association_options] = useState([]);\n    const [guarantee_do_options, setGuarantee_do_options] = useState([]);\n    const [provider_options, setProvider_options] = useState([]);\n    const [project_name_options, setProject_name_options] = useState([]);\n    const [commission_members_options, setCommission_members_options] = useState([]);\n\n    const getData = () => {\n        setMode('');\n\n        GridRef.current.scrollIntoView({ behavior: 'smooth' });\n        Promise.all([getItems(entityName), getItems(\"baseInfo\"), getItems(\"trading_commission\"), getItems(\"projects\"),\n        getItems(\"organizational\"), getItem(6, \"permission\")]).then((response) => {\n\n            let cp = checkPermission(response[5].data);\n            if (cp.canRead) {\n                setPer(cp);\n\n                let dt = response[0].data;\n                dt.forEach(e => {\n\n                    e.call_date = e.call_date ? moment(e.call_date) : undefined;\n                    e.date_open = e.date_open ? moment(e.date_open) : undefined;\n                    e.last_date = e.last_date ? moment(e.last_date) : undefined;\n                    e.call_datedisplay = e.call_date && moment.isMoment(e.call_date) ? e.call_date.format('jYYYY/jMM/jDD') : '';\n\n                });\n\n                setData(response[0].data);\n                setReference_options(response[1].data.filter(a => a.groupid === 10).map(a => { return { key: a.id, label: a.title, value: a.id } }));\n                setWinning_company_options(response[4].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n                setGuarantee_association_options(response[1].data.filter(a => a.groupid === 4).map(a => { return { key: a.id, label: a.title, value: a.id } }));\n                setGuarantee_do_options(response[1].data.filter(a => a.groupid === 4).map(a => { return { key: a.id, label: a.title, value: a.id } }));\n                setProvider_options(response[4].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n                setProject_name_options(response[3].data.map(a => { return { key: a.id, label: a.title + '_' + a.project_code, value: a.id, code: a.project_code } }));\n                setCommission_members_options(response[2].data.map(a => { return { key: a.id, label: a.title, value: a.id } }));\n\n            }\n        })\n        setObj({});\n        setErrors({});\n    }\n    useEffect(() => {\n        getData();\n    }, [])\n\n\n    const btnNewClick = () => {\n        setMode('new');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    const saveBtnClick = () => {\n\n\n        let err = {};\n        columns.filter(a => a.req).forEach(a => {\n            if (a.type === 'lookup')\n                err[a.accessor + \"_id\"] = obj[a.accessor + \"_id\"] ? false : true;\n            else\n                err[a.accessor] = obj[a.accessor] ? false : true;\n        })\n\n\n        if (Object.values(err).filter(a => a).length > 0) {\n            setErrors(err);\n            BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n            alert(\"لطفا موارد الزامی را وارد کنید\");\n        }\n\n        else {\n            delete obj.call_datedisplay;\n\n            if (mode === 'new') {\n                insertItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                            message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                        else {\n                            //alert('خطا در ذخیره سازی اطلاعات');\n                            message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                            console.log(response.data.message);\n                        }\n\n                    }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n            else if (mode === 'edit') {\n                updateItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                            message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                        else {\n                            // alert('خطا در ذخیره سازی اطلاعات');\n                            message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                            console.log(response.data.message);\n                        }\n                    }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n        }\n    }\n    const deleteBtnClick = (item) => {\n\n        deleteItem(item.id, entityName).then(a => {\n            getData();\n        });\n\n    }\n    const displayBtnClick = (item) => {\n        setMode('display');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const editBtnClick = (item) => {\n        item.commission_members_id = item.commission_members_id ? item.commission_members_id : [];\n        ;\n        setMode('edit');\n        BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const cancelBtnClick = () => {\n        setMode('');\n        GridRef.current.scrollIntoView({ behavior: 'smooth' });\n\n    }\n    return (<div className=\"container-fluid\">\n        <div className=\"row\" style={{ paddingTop: '15px' }}>\n            <div className=\"col\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\" ref={GridRef}>\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">فراخوان ها</h3>\n                            </div>\n                            {per.canAdd && <div className=\"col text-right\">\n                                <button className=\"btn btn-icon btn-primary\" type=\"button\" onClick={btnNewClick}>\n                                    <span className=\"btn-inner--icon\"><i className=\"fas fa-plus\"></i></span>\n                                    <span className=\"btn-inner--text\">مورد جدید</span>\n                                </button>\n\n                            </div>}\n                        </div>\n                    </div>\n                    <div className='table-responsive'>\n                        <TableContainer columns={columns.filter(a => !a.notInGrid)} data={data} downloadName={pageHeader}\n                            deleteClick={per.canEdit ? deleteBtnClick : undefined}\n                            displayClick={displayBtnClick}\n                            editClick={per.canEdit ? editBtnClick : undefined} />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"row\" style={{ paddingTop: '15px' }} ref={BoxRef}>\n            {mode !== '' && <div className=\"col\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\">\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">  {mode === 'new' ? 'اضافه کردن آیتم جدید' : mode === 'edit' ? 'ویرایش آیتم' : 'مشاهده آیتم'}</h3>\n                                <hr></hr>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='card-body' style={{ marginTop: '-50px' }}>\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شماره فراخوان</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.call_number ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.call_number}\n                                            onChange={(e) => setObj({ ...obj, call_number: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">نام پروژه </label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.project_name_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={project_name_options}\n                                            value={obj.project_name_id} onSelect={(values) => { setObj({ ...obj, project_name_id: values }); setCalc({ projectCode: project_name_options.find(a => a.key === values).code }) }}\n                                        />\n                                    </div>\n                                </div>\n                                {/* <div className=\"col\">\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">کدپروژه</label>\n                    <label className=\"form-control\">{calc.projectCode}</label>\n                   \n                </div>\n            </div> */}\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">موضوع فراخوان</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.title ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.title}\n                                            onChange={(e) => setObj({ ...obj, title: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">تاریخ فراخوان</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <DatePicker onChange={value => setObj({ ...obj, call_date: value })}\n                                            value={obj.call_date} disabled={mode === 'display'} {...Static.datePickerDefaultProp}\n                                            className={errors.call_date ? \"form-control error-control\" : 'form-control'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">آخرین تاریخ تجدید</label>\n                                        <DatePicker onChange={value => setObj({ ...obj, last_date: value })}\n                                            value={obj.last_date} disabled={mode === 'display'} {...Static.datePickerDefaultProp}\n                                            className={errors.last_date ? \"form-control error-control\" : 'form-control'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">تاریخ بازگشایی پاکات</label>\n                                        <DatePicker onChange={value => setObj({ ...obj, date_open: value })}\n                                            value={obj.date_open} disabled={mode === 'display'} {...Static.datePickerDefaultProp}\n                                            className={errors.date_open ? \"form-control error-control\" : 'form-control'} />\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">متن فراخوان</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.call_text ? \"form-control error-control\" : \"form-control\"} type=\"text\" value={obj.call_text}\n                                            onChange={(e) => setObj({ ...obj, call_text: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شرکت کننده برنده</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.winning_company_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={winning_company_options}\n                                            value={obj.winning_company_id} onSelect={(values) => setObj({ ...obj, winning_company_id: values })}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">قیمت برنده</label>\n                                        <label className=\"req-label\"> *</label>\n                                        <input className={errors.winning_price ? \"form-control error-control\" : \"form-control\"} type=\"number\" value={obj.winning_price}\n                                            onChange={(e) => setObj({ ...obj, winning_price: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">کمیسیون منصوب </label>\n                                        <label className=\"req-label\"> *</label>\n                                        <Select className={errors.commission_members_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={commission_members_options}\n                                            mode=\"multiple\" value={obj.commission_members_id} onChange={(values) => setObj({ ...obj, commission_members_id: values })}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">تضمین شرکت در فراخوان</label>\n                                        <Select className={errors.guarantee_association_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={guarantee_association_options}\n                                            value={obj.guarantee_association_id} onSelect={(values) => setObj({ ...obj, guarantee_association_id: values })}\n                                        />\n                                    </div>\n                                </div><div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">تضمین انجام تعهدات</label>\n                                        <Select className={errors.guarantee_do_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={guarantee_do_options}\n                                            value={obj.guarantee_do_id} onSelect={(values) => setObj({ ...obj, guarantee_do_id: values })}\n                                        />\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">مرجع انتشار</label>\n                                        <Select className={errors.reference_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={reference_options}\n                                            value={obj.reference_id} onSelect={(values) => setObj({ ...obj, reference_id: values })}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">هزینه آگهی</label>\n                                        <input className={errors.advertising_fee ? \"form-control error-control\" : \"form-control\"} type=\"number\" value={obj.advertising_fee}\n                                            onChange={(e) => setObj({ ...obj, advertising_fee: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">تامین کننده هزینه آگهی</label>\n                                        <Select className={errors.provider_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={provider_options}\n                                            value={obj.provider_id} onSelect={(values) => setObj({ ...obj, provider_id: values })}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                \n                                <div className=\"col-4\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">شرکت کننده دوم</label>\n                                        {/* <label className=\"req-label\"> *</label> */}\n                                        <Select className={errors.second_company_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={winning_company_options}\n                                            value={obj.second_company_id} onSelect={(values) => setObj({ ...obj, second_company_id: values })}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">قیمت شرکت کننده دوم</label>\n                                        {/* <label className=\"req-label\"> *</label> */}\n                                        <input className={errors.second_price ? \"form-control error-control\" : \"form-control\"} type=\"number\" value={obj.second_price}\n                                            onChange={(e) => setObj({ ...obj, second_price: e.target.value })} disabled={mode === 'display'} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                {mode !== \"display\" && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={saveBtnClick}>ذخیره</button>}\n                                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={cancelBtnClick}>انصراف</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    </div>)\n}\n\nexport default Call;","C:\\source\\ASP\\client\\src\\forms\\call\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\organizational\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\contract\\statics.js",["167"],"import moment from 'moment-jalaali'\r\n\r\nexport const columns = [\r\n  {\r\n    Header: \"شناسه\",\r\n    accessor: \"id\",\r\n   notInGrid: true,\r\n    notInForm: true,\r\n    type: \"serial\",\r\n  },\r\n\r\n  {\r\n    Header: \"پروژه\",\r\n    accessor: \"project\",\r\n    type: \"lookup\",\r\n    entity: 'projects',\r\n    req: true,\r\n   notInGrid: true,\r\n  },\r\n  {\r\n    Header: \"نام قرارداد\",\r\n    accessor: \"title\",\r\n    type: \"text\",\r\n    req: true,\r\n  },\r\n\r\n  {\r\n    Header: \"نام پروژه\",\r\n    accessor: \"project_name\",\r\n    type: \"calc\",\r\n    notInForm: true,\r\n  },\r\n  {\r\n    Header: \"طرف قرارداد\",\r\n    accessor: \"contracting_party\",\r\n    type: \"lookup\",\r\n    entity: 'organizational',\r\n    req: true,\r\n\r\n  },\r\n  {\r\n    Header: \"مبلغ اولیه قرارداد\",\r\n    accessor: \"initial_amount\",\r\n    type: \"number\",\r\n    req: true,\r\n\r\n  },\r\n  {\r\n    Header: \"تاریخ ابلاغ قرارداد\",\r\n    accessor: \"date_signiification\",\r\n    type: \"date\",\r\n    req: true,\r\n  notInGrid: true,\r\n  },\r\n\r\n  {\r\n    Header: \"تاریخ ابلاغ قرارداد\",\r\n    accessor: \"date_signiificationgrid\",\r\n    type: \"date\",\r\n   \r\n    notInForm: true,\r\n  },\r\n\r\n\r\n\r\n  {\r\n    Header: \"کدپروژه\",\r\n    accessor: \"Project_code\",\r\n    type: \"calc\",\r\n   notInGrid: true,\r\n  },\r\n\r\n\r\n  {\r\n    Header: \"شماره قرارداد\",\r\n    accessor: \"contract_number\",\r\n    type: \"text\",\r\n    req: true,\r\n    notInGrid: true,\r\n   \r\n  },\r\n\r\n  {\r\n    Header: \"موضوع قرارداد\",\r\n    accessor: \"contract_subject\",\r\n    type: \"text\",\r\n    req: true,\r\n   notInGrid: true,\r\n\r\n  },\r\n\r\n  {\r\n    Header: \"تاریخ انعقاد قرارداد\",\r\n    accessor: \"date_ratifcation\",\r\n    type: \"date\",\r\n    //req: true,\r\n   notInGrid: true,\r\n  },\r\n\r\n  \r\n\r\n  {\r\n    Header: \"نوع فراخوان\",\r\n    accessor: \"type_tender\",\r\n    type: \"lookup\",\r\n    entity: 'baseInfo',\r\n   notInGrid: true,\r\n  },\r\n\r\n\r\n  {\r\n    Header: \"تاریخ کمیسیون\",\r\n    accessor: \"date_commission\",\r\n    type: \"date\",\r\n   notInGrid: true,\r\n\r\n  },\r\n\r\n  {\r\n    Header: \"توضیحات تکمیلی\",\r\n    accessor: \"commission_number\",\r\n    type: \"text\",\r\n   notInGrid: true,\r\n  },\r\n\r\n  {\r\n    Header: \"کمیسیون منصوب\",\r\n    accessor: \"commission_members\",\r\n    type: \"lookup\",\r\n    entity: 'trading_commission',\r\n   notInGrid: true,\r\n\r\n  },\r\n  \r\n  {\r\n    Header: \"نوع قرارداد\",\r\n    accessor: \"contract_type\",\r\n    type: \"lookup\",\r\n    entity: 'baseInfo',\r\n\r\n  },\r\n  /*{\r\n    Header: \"تاریخ شروع\",\r\n    accessor: \"start_date1\",\r\n    type: \"date\",\r\n    notInForm: true,\r\n  },*/\r\n  {\r\n    Header: \"تاریخ شروع\",\r\n    accessor: \"start_date\",\r\n    type: \"date\",\r\n    notInGrid: true,\r\n    req: true,\r\n   //render: function (text) { return text&&moment.isMoment(text)?text.format('jYYYY/jMM/jDD') :''}\r\n  },\r\n  {\r\n    Header: \"تاریخ خاتمه\",\r\n    accessor: \"end_date\",\r\n    type: \"date\",\r\n   notInGrid: true,\r\n    req: true,\r\n    \r\n  },\r\n  {\r\n    Header:\"تاریخ خاتمه\",\r\n    accessor: \"end_dategrid\",\r\n    type: \"date\",\r\n    notInForm: true,\r\n    //req: true,\r\n   //render: function (text) { return text&&moment.isMoment(text)?text.format('jYYYY/jMM/jDD') :''}\r\n  },\r\n  \r\n  {\r\n    Header: \"مدیر پروژه\",\r\n    accessor: \"project_manager\",\r\n    type: \"lookup\",\r\n    entity: 'colleague',\r\n   notInGrid: true,\r\n  },\r\n\r\n  {\r\n    Header: \"شماره تماس\",\r\n    accessor: \"phone_manager\",\r\n    notInGrid:true,\r\n    type:\"calc\",\r\n\r\n},\r\n  {\r\n    Header: \"کارفرما\",\r\n    accessor: \"employer\",\r\n    type: \"lookup\",\r\n    entity: 'organizational',\r\n \r\n\r\n  },\r\n\r\n  {\r\n    Header: \"پیمانکار\",\r\n    accessor: \"contractor\",\r\n    type: \"lookup\",\r\n    entity: 'organizational',\r\n\r\n\r\n  },\r\n\r\n  {\r\n    Header: \"مشاور\",\r\n    accessor: \"consultant\",\r\n    type: \"lookup\",\r\n    entity: 'organizational',\r\n   notInGrid: true,\r\n\r\n  },\r\n  {\r\n    Header: \"استان\",\r\n    accessor: \"province\",\r\n    type: \"lookup\",\r\n    entity: 'baseInfo',\r\n   notInGrid: true,\r\n\r\n  },\r\n\r\n  {\r\n    Header: \"شهر\",\r\n    accessor: \"city\",\r\n   notInGrid: true,\r\n    type: \"text\",\r\n\r\n  },\r\n\r\n  {\r\n    Header: \"مبلغ پیش پرداخت\",\r\n    accessor: \"prepayment_amount\",\r\n    type: \"number\",\r\n    req: true,\r\n   notInGrid: true,\r\n  },\r\n  {\r\n    Header: \"نوع تضمین پیش پرداخت\",\r\n    accessor: \"type_payment\",\r\n    type: \"lookup\",\r\n    entity: 'baseInfo',\r\n   notInGrid: true,\r\n   // req: true,\r\n  },\r\n\r\n  {\r\n    Header: \"نوع تضمین تعهدات\",\r\n    accessor: \"type_guarantee\",\r\n    type: \"lookup\",\r\n    entity: 'baseInfo',\r\n   notInGrid: true,\r\n   // req: true,\r\n  },\r\n  {\r\n    Header: \"مبلغ تضمین تعهدات\",\r\n    accessor: \"amount_guarantee\",\r\n    type: \"number\",\r\n   // req: true,\r\n   notInGrid: true,\r\n  },\r\n\r\n];\r\n\r\n\r\nexport const entityName = 'contract';\r\nexport const pageHeader = 'اطلاعات قراردادها';\r\n\r\n\r\n","C:\\source\\ASP\\client\\src\\forms\\supplement\\index.js",[],"C:\\source\\ASP\\client\\src\\forms\\supplement\\statics.js",["168"],"import moment from 'moment-jalaali';\r\n\r\nexport const columns = [\r\n\r\n  {\r\n    Header: \"شناسه\",\r\n    accessor: \"id\",\r\n    notInGrid:true,\r\n    notInForm:true,\r\n    type:\"serial\",\r\n},\r\n \r\n{\r\n  Header: \"نام و شماره قرارداد \",\r\n  accessor: \"contract_number\",\r\n  type:\"lookup\", \r\n  entity:'contract',\r\n   req:true,\r\n\r\n}, \r\n \r\n  {\r\n      Header: \"شماره الحاقیه\",\r\n      accessor: \"title\",\r\n      type:\"text\",\r\n      req:true,\r\n      notInGrid:true,\r\n   \r\n    },\r\n\r\n   \r\n    {\r\n      Header: \"مبلغ جدید \",\r\n      accessor: \"new_amount\",\r\n      type:\"number\",\r\n      req:true,\r\n   }, \r\n\r\n\r\n   {\r\n      Header: \"تاریخ خاتمه جدید\",\r\n      accessor: \"end_date\",\r\n      type:\"date\",\r\n      notInGrid:true,\r\n     // req:true,\r\n   },\r\n\r\n   {\r\n    Header: \"تاریخ خاتمه جدید\",\r\n    accessor: \"end_datedisplay\",\r\n    type:\"date\",\r\n\r\n    notInForm:true,\r\n },\r\n   \r\n    {\r\n      Header: \"تعهدات جدید\",\r\n      accessor: \"new_commitments\",\r\n      type:\"text\",\r\n    // req:true,\r\n    },\r\n   \r\n  ];\r\n \r\n \r\n export const entityName='supplement';\r\n export const pageHeader='الحاقیه ها';\r\n \r\n \r\n \r\n  \r\n   \r\n   ","C:\\source\\ASP\\client\\src\\forms\\file_MNG\\index.js",["169","170"],"import React, { useState, useEffect, useRef } from 'react';\r\n//import { getItems, insertItem, deleteItem, updateItem } from '../../api/index';\r\nimport { message, Select  } from 'antd';\r\nimport Static from '../static';\r\n\r\n\r\nimport '../../assets/css/fileMNG.css';\r\nconst FileMNG = (props) => {\r\n    const [step, setStep] = useState(1);\r\n    const [st, setSt] = useState(0);\r\n    const [obj, setObj] = useState({});\r\n    const [type_options, setType_options] = useState([]);\r\n    const [project_options, setProject_options] = useState([]);\r\n    const [employee_options, setEmployee_options] = useState([]);\r\n    const [company_options, setCompany_options] = useState([]);\r\n    const [tender_options, setTender_options] = useState([]);\r\n   \r\n    const [tags, setTags] = React.useState([]);\r\n    const [suggestions, setSuggestions] = React.useState([\r\n    { value: 3, title: \"صورت وضعیت\" },\r\n    { value: 4, title: \"صورت جلسه\" },\r\n    { value: 5, title: \"اداره تدارکات\" },\r\n    { value: 6, title: \"دستور مدیرعامل\" }].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n    const getData = () => {\r\n        setType_options([{ title: 'اسناد همکاران', value: 1 },\r\n        { title: 'اسناد پروژه', value: 2 },\r\n        { title: 'اسناد شرکت ها', value: 3 },\r\n        { title: 'اسناد مناقصه', value: 4 },\r\n        { title: 'متفرقه', value: 5 },\r\n\r\n        ].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n        setProject_options([{ title: 'پروژه11', value: 1 },\r\n        { title: 'پروژه1', value: 2 },\r\n        { title: 'پروژه2', value: 3 },\r\n        { title: 'پروژه3', value: 4 },\r\n        { title: 'پروژه4', value: 5 },\r\n        ].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n        setEmployee_options([{ title: 'همکار 1', value: 1 },\r\n        { title: 'همکار 2', value: 2 },\r\n        { title: 'همکار 3', value: 3 },\r\n        { title: 'همکار 4', value: 4 },\r\n        { title: 'همکار 5', value: 5 },\r\n        ].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n        setCompany_options([\r\n        { title: 'شرکت 1', value: 1 },\r\n        { title: 'شرکت 2', value: 2 },\r\n        { title: 'شرکت 3', value: 3 },\r\n        { title: 'شرکت 4', value: 4 },\r\n        { title: 'شرکت 5', value: 5 },\r\n        ].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n        setTender_options([\r\n        { title: 'مناقصه 1', value: 1 },\r\n        { title: 'مناقصه 2', value: 2 },\r\n        { title: 'مناقصه 3', value: 3 },\r\n        { title: 'مناقصه 4', value: 4 },\r\n        { title: 'مناقصه 5', value: 5 },\r\n        ].map(a => { return { key: a.value, label: a.title, value: a.value } }));\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const saveFile=()=>{\r\n        message.success('فایل با موفقیت بارگذاری شد . کد سند : 552-15952-12',4);\r\n        setStep(1);\r\n    }\r\n    return (\r\n\r\n        <section class=\"multi_step_form\">\r\n            <form id=\"msform\">\r\n\r\n                <div class=\"tittle\">\r\n                    <h2>سیستم آرشیو اسناد</h2>\r\n                    <p>لطفا فایل مورد نظر را بارگذاری کنید</p>\r\n                </div>\r\n\r\n                <ul id=\"progressbar\">\r\n                    <li class={step > 0 ? \"active\" : ''}>اطلاعات</li>\r\n                    <li class={step > 1 ? \"active\" : ''}>بارگذاری فایل</li>\r\n                    <li class={step > 2 ? \"active\" : ''}>برچسب گذاری</li>\r\n                </ul>\r\n\r\n                {step === 1 && <fieldset>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">نوع فایل</label>\r\n                                <Select className=\"form-control\" {...Static.selectDefaultProp} options={type_options}\r\n                                    value={obj.type_id} onSelect={(values) =>{ setObj({ ...obj, type_id: values });setSt(values)}} />\r\n                            </div>\r\n                        </div>\r\n                      {st===2&&  <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">پروژه</label>\r\n                                <Select className=\"form-control\" {...Static.selectDefaultProp} options={project_options}\r\n                                    value={obj.project_id} onSelect={(values) => setObj({ ...obj, project_id: values })} />\r\n                            </div>\r\n                        </div> }\r\n                        {st===1&&   <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">همکاران</label>\r\n                                <Select className=\"form-control\" {...Static.selectDefaultProp} options={employee_options}\r\n                                    value={obj.employee_id} onSelect={(values) => setObj({ ...obj, employee_id: values })} />\r\n                            </div>\r\n                        </div>}\r\n                        {st===3&&     <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">شرکت ها</label>\r\n                                <Select className=\"form-control\" {...Static.selectDefaultProp} options={company_options}\r\n                                    value={obj.company_id} onSelect={(values) => setObj({ ...obj, company_id: values })} />\r\n                            </div>\r\n                        </div>}\r\n                        {st===4&&   <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">مناقصه</label>\r\n                                <Select className=\"form-control\" {...Static.selectDefaultProp} options={tender_options}\r\n                                    value={obj.tender_id} onSelect={(values) => setObj({ ...obj,tender_id: values })} />\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <input type=\"button\" class=\"next action-button\" value='ادامه' onClick={() => setStep(2)} />\r\n                    {/* <input type=\"button\" class=\"action-button previous_button\" value='بازگشت' /> */}\r\n\r\n                </fieldset>}\r\n\r\n                {step === 2 && <fieldset>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-control-label\">بارگذاری</label>\r\n                                <input type=\"file\" class=\"custom-file-input\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"button\" class=\"next action-button\" value='ادامه' onClick={() => setStep(3)} />\r\n                    <input type=\"button\" class=\"action-button previous previous_button\" value='بازگشت' onClick={() => setStep(1)}/>\r\n\r\n                </fieldset>}\r\n\r\n                {step === 3 && <fieldset>\r\n                    <h3>برچسب گدازی</h3>\r\n                    <h6>مواردی که به فایل ارتباط دارند رو تایپ کنید تا بتوان از انها در جستجو استفاده کرد</h6>\r\n                    \r\n                    <Select className=\"form-control\" {...Static.selectDefaultProp} options={suggestions} mode=\"tags\"\r\n                                    value={tags} onChange={(values) => setTags(values )} />\r\n                    <br/>  <br/>  <br/>\r\n                    <input type=\"button\" class=\"next action-button\" value='اتمام' onClick={() => saveFile()} />\r\n                    <input type=\"button\" class=\"action-button previous previous_button\" value='بازگشت' onClick={() => setStep(2)}/>\r\n                </fieldset>}\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FileMNG;","C:\\source\\ASP\\client\\src\\forms\\file_MNG\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\file_MNG\\rpt.js",["171","172","173","174","175","176"],"import React, { useState, useEffect, useRef } from 'react';\r\n//import { getItems, insertItem, deleteItem, updateItem } from '../../api/index';\r\nimport { message, Select } from 'antd';\r\nimport Static from '../static';\r\nimport { useTable } from \"react-table\"\r\n\r\n//import '../../assets/css/fileMNG.css';\r\nconst FileMNG_rpt = (props) => {\r\n    const [data, setData] = useState([]);\r\n    const [columns,setColumns]=useState([{\r\n        Header: \"کد سند\",\r\n        accessor: \"code\",\r\n    },\r\n    {\r\n        Header: \"نوع\",\r\n        accessor: \"type\",\r\n    }, {\r\n        Header: \"عنوان\",\r\n        accessor: \"title\",\r\n    }, {\r\n        Header: \"برچسب\",\r\n        accessor: \"tag\",\r\n    }]);\r\n    const orgData = [{id:1, code: 'PRJ-1258-25-01', type: 'اسناد پروژه', title: 'پروژه1', tag: 'فایل قرارداد' },\r\n    {id:2, code: 'PRJ-1258-25-01', type: 'اسناد پروژه', title: 'پروژه1', tag: 'صورت وضعیت شماره1' },\r\n    {id:3, code: 'PRJ-1258-25-02', type: 'اسناد پروژه', title: 'پروژه1', tag: 'صورت وضعیت شماره2' },\r\n    {id:4, code: 'PRJ-1258-25-04', type: 'اسناد پروژه', title: 'پروژه1', tag: 'صورت وضعیت شماره4' },\r\n    {id:5, code: 'PRJ-1258-26-01', type: 'اسناد پروژه', title: 'پروژه1', tag: 'تعدیل قرارداد' },\r\n    {id:6, code: 'PRJ-1258-18-01', type: 'اسناد پروژه', title: 'پروژه1', tag: 'صورت جلسه تحویل زمین' },\r\n    {id:7, code: 'EPM-15321-11-01', type: 'اسناد همکاران', title: '1همکار', tag: 'فایل قرارداد' },\r\n    {id:8, code: 'EPM-15327-8-01', type: 'اسناد همکاران', title: '2همکار', tag: 'مدارک تحصیلی' },\r\n    {id:9, code: 'EPM-15327-11-01', type: 'اسناد همکاران', title: 'همکار2', tag: 'فایل قرارداد' },\r\n    {id:10, code: 'PRJ-1800-25-01', type: 'اسناد پروژه', title: 'پروژه2', tag: 'صورت وضعیت شماره1' },\r\n    {id:11, code: 'PRJ-2541-25-01', type: 'اسناد پروژه', title: 'پروژه3', tag: 'صورت وضعیت شماره1' },\r\n    {id:12, code: 'PRJ-1800-25-01', type: 'اسناد پروژه', title: 'پروژه2', tag: 'صورت وضعیت شماره2' }];\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n    const onSearch = (searchText) => {\r\n        //debugger;\r\n       // console.log(searchText);\r\n        if (searchText === '')\r\n          setData([])\r\n        else {\r\n    \r\n          let matched = [];\r\n          orgData.forEach(record => {\r\n            columns.filter(a => a.dataIndex !== 'operation').forEach(c => {\r\n              //    console.log(record[c.dataIndex]);\r\n              if (record[c.accessor] && record[c.accessor].toString().indexOf(searchText) >= 0 \r\n                  &&!matched.find(a=>a.id===record.id)) {\r\n               \r\n                matched.push(record);\r\n                \r\n              }\r\n            })\r\n          })\r\n          console.log(matched)\r\n          setData(matched);\r\n    \r\n        }\r\n    }    \r\n    return (\r\n\r\n        <section className=\"multi_step_form\">\r\n            <form id=\"msform\">\r\n\r\n                <div className=\"tittle\">\r\n                    <h2>سیستم آرشیو اسناد</h2>\r\n\r\n                </div>\r\n                جستجو : <input className='form-control' onChange={e => onSearch(e.target.value)}\r\n        style={{ width: '200px', display: 'inline', marginBottom: '20px' }} />\r\n        <br/>\r\n                <table {...getTableProps()} className='table align-items-center table-flush'>\r\n                    <thead className='thead-light'>\r\n                        {headerGroups.map(headerGroup => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map(column => (\r\n                                    <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n                                ))}\r\n                                <th> فایل</th>\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                    })}\r\n                                    <td>\r\n                                        <a href='http://www.google.com'>دانلود</a>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FileMNG_rpt;","C:\\source\\ASP\\client\\src\\forms\\permission\\index.js",["177","178","179"],"import React, { useState, useEffect, useRef } from 'react';\nimport { getItems, insertItem, deleteItem, updateItem } from '../../api/index';\nimport TableContainer from \"../../components/TableContainer\";\nimport { entity_options, entityName, pageHeader, columns } from './statics';\nimport { message, Select } from 'antd';\n//import DatePicker from 'react-datepicker2';\nimport Static from '../static';\n\nconst Contract = (props) => {\n    const BoxRef = useRef(null), GridRef = useRef(null);;\n\n    const [data, setData] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [obj, setObj] = useState({});\n    const [users_options, setUsers_options] = useState([]);\n    const [permissions_options, setPermissions_options] = useState([]);\n    const [mode, setMode] = useState('');\n    const [grpSelected, setGrpSelected] = useState(1);\n    const [orgData, setOrgData] = useState([]);\n\n    const getData = () => {\n        setMode('');\n        //  GridRef.current.scrollIntoView({ behavior: 'smooth' });\n        Promise.all([getItems(entityName), getItems(\"user\"), getItems(\"baseInfo\")]).then((response) => {\n            setData(response[0].data.filter(a => a.entity_id == grpSelected));\n            setOrgData(response[0].data);\n            setPermissions_options(response[2].data.filter(a => a.groupid === 100).map(a => { return { key: a.id, label: a.title, value: a.id } }));\n            setUsers_options(response[1].data.map(a => { return { key: a.id, label: a.name, value: a.id } }));\n        })\n        setObj({});\n        setErrors({});\n    }\n    useEffect(() => {\n        getData();\n    }, [])\n\n\n\n    const btnNewClick = () => {\n        setMode('new');\n        //  BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    const saveBtnClick = () => {\n\n        let err = {};\n        // columns.filter(a => a.req).forEach(a => {\n        //     if (a.type === 'lookup')\n        //         err[a.accessor + \"_id\"] = obj[a.accessor + \"_id\"] ? false : true;\n        //     else\n        //         err[a.accessor] = obj[a.accessor] ? false : true;\n        // })\n\n\n        if (Object.values(err).filter(a => a).length > 0) {\n            setErrors(err);\n            //   BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n            alert(\"لطفا موارد الزامی را وارد کنید\");\n        }\n\n        else {\n            obj.entity_id = grpSelected;\n\n            if (mode === 'new') {\n                insertItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                            message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                        else {\n                            message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                            console.log(response.data.message);\n                        }\n                    }\n\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n            else if (mode === 'edit') {\n                delete obj.project_name;\n                updateItem(obj, entityName).then(response => {\n                    if (response.data.type !== \"Error\") {\n                        message.success('آیتم با موفقیت ذخیره شد');\n                        //alert('آیتم با موفقیت ذخیره شد');\n                        getData();\n                    }\n                    else {\n                        if (response.data.message.indexOf('duplicate key value violates unique constraint') > -1)\n                            message.error(Static.errorMesesagDuplicate, Static.errorDuration);\n                        else {\n                            message.error('خطا در ذخیره سازی اطلاعات', 3000);\n                            console.log(response.data.message);\n                        }\n                    }\n                }).catch((error) => {\n                    message.error('بروز خطا در سیستم', 3000);\n                    console.log(error)\n                });\n            }\n        }\n    }\n    const deleteBtnClick = (item) => {\n\n        deleteItem(item.id, entityName).then(a => {\n            getData();\n        });\n\n    }\n    const displayBtnClick = (item) => {\n        setMode('display');\n        //  BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const editBtnClick = (item) => {\n        setMode('edit');\n  \n        //   BoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setObj(item);\n    }\n    const cancelBtnClick = () => {\n        setMode('');\n        //  GridRef.current.scrollIntoView({ behavior: 'smooth' });\n\n    }\n    const entityChange = (value) => {\n        console.log(value);\n    \n        setData(orgData.filter(a => a.entity_id == value));\n        setGrpSelected(value);\n    }\n    return (<div className=\"container-fluid\">\n        <div className=\"row\" style={{ paddingTop: '15px' }}>\n            <div className=\"col-7\">\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\" ref={GridRef}>\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">{pageHeader}</h3>\n                            </div>\n                            <div className='col-5 ml-auto'>\n\n                                <Select className={errors.entity_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} options={entity_options}\n                                    value={obj.entity_id} onSelect={(values) => entityChange(values)}\n                                />\n                            </div>\n                            <div className=\"col text-right\">\n                                <button className=\"btn btn-icon btn-primary\" type=\"button\" onClick={btnNewClick}>\n                                    <span className=\"btn-inner--icon\"><i className=\"fas fa-plus\"></i></span>\n                                    <span className=\"btn-inner--text\">مورد جدید</span>\n                                </button>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive'>\n                        <TableContainer columns={columns.filter(a => !a.notInGrid)} data={data}\n                            deleteClick={deleteBtnClick}\n                            displayClick={displayBtnClick}\n                            editClick={editBtnClick} />\n                    </div>\n                </div>\n            </div>\n\n            {mode !== '' && <div className=\"col\" ref={BoxRef}>\n                <div className=\"card \">\n                    <div className=\"card-header border-0\">\n                        <div className=\"row align-items-center\">\n\n                            <div className=\"col\">\n                                <h3 className=\"mb-0\">\n                                    {mode === 'new' ? 'اضافه کردن آیتم جدید' : mode === 'edit' ? 'ویرایش آیتم' : 'مشاهده آیتم'}\n                                </h3>\n                                <hr></hr>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className='card-body' style={{ marginTop: '-50px' }}>\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">کاربر</label>\n                                        <Select className={errors.user_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={users_options}\n                                            value={obj.user_id} onSelect={(values) => { setObj({ ...obj, user_id: values }) }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\">دسترسی</label>\n                                        <Select className={errors.permission_id ? \"form-control error-control\" : \"form-control\"} {...Static.selectDefaultProp} disabled={mode === 'display'} options={permissions_options}\n                                            value={obj.permission_id} onSelect={(values) => { setObj({ ...obj, permission_id: values }) }}\n\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    {mode !== \"display\" && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={saveBtnClick}>ذخیره</button>}\n                                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={cancelBtnClick}>انصراف</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    </div>)\n}\n\nexport default Contract;","C:\\source\\ASP\\client\\src\\forms\\permission\\statics.js",[],"C:\\source\\ASP\\client\\src\\forms\\commingSoon.js",["180"],"import React from 'react';\r\nimport img from '../assets/img/working.png';\r\n\r\nconst CommingSoon = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <p style={{direction: \"rtl\", textAlign: \"center\"}}>\r\n        <img src={img} width=\"500\" />\r\n      </p>\r\n      <p style={{direction: \"rtl\", textAlign: \"center\"}}>\r\n        پس از تکمیل اطلاعات پایه و تحلیل اطلاعات پویا (Dynamic Information) در فاز های آتی ، این صفحه با سفارش سازمان؛ طراحی و\r\n        پیاده سازی خواهد شد.\r\n</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommingSoon;","C:\\source\\ASP\\client\\src\\forms\\mainPage.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":56,"nodeType":"187","messageId":"188","endLine":2,"endColumn":67},{"ruleId":"189","severity":1,"message":"190","line":83,"column":21,"nodeType":"191","endLine":83,"endColumn":45},{"ruleId":"192","severity":1,"message":"193","line":38,"column":8,"nodeType":"194","endLine":38,"endColumn":10,"suggestions":"195"},{"ruleId":"185","severity":1,"message":"196","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"197","line":16,"column":12,"nodeType":"187","messageId":"188","endLine":16,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":29,"column":60,"nodeType":"200","messageId":"201","endLine":29,"endColumn":62},{"ruleId":"192","severity":1,"message":"202","line":38,"column":8,"nodeType":"194","endLine":38,"endColumn":10,"suggestions":"203"},{"ruleId":"198","severity":1,"message":"199","line":123,"column":47,"nodeType":"200","messageId":"201","endLine":123,"endColumn":49},{"ruleId":"198","severity":1,"message":"199","line":26,"column":64,"nodeType":"200","messageId":"201","endLine":26,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":35,"column":1,"nodeType":"206","endLine":35,"endColumn":136},{"ruleId":"185","severity":1,"message":"207","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":87,"column":21,"nodeType":"191","endLine":87,"endColumn":115},{"ruleId":"185","severity":1,"message":"208","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":18},{"ruleId":"185","severity":1,"message":"209","line":18,"column":12,"nodeType":"187","messageId":"188","endLine":18,"endColumn":16},{"ruleId":"185","severity":1,"message":"210","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":14},{"ruleId":"185","severity":1,"message":"210","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":14},{"ruleId":"185","severity":1,"message":"211","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":44},{"ruleId":"185","severity":1,"message":"212","line":19,"column":25,"nodeType":"187","messageId":"188","endLine":19,"endColumn":39},{"ruleId":"185","severity":1,"message":"207","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"211","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":44},{"ruleId":"185","severity":1,"message":"213","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"214","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":25},{"ruleId":"185","severity":1,"message":"196","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"215","line":10,"column":20,"nodeType":"187","messageId":"188","endLine":10,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":25,"column":62,"nodeType":"200","messageId":"201","endLine":25,"endColumn":64},{"ruleId":"192","severity":1,"message":"202","line":35,"column":8,"nodeType":"194","endLine":35,"endColumn":10,"suggestions":"216"},{"ruleId":"198","severity":1,"message":"199","line":133,"column":49,"nodeType":"200","messageId":"201","endLine":133,"endColumn":51},{"ruleId":"217","severity":1,"message":"218","line":12,"column":9,"nodeType":"191","endLine":12,"endColumn":38},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["221"],"'Static' is defined but never used.","'errors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["222"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'DatePicker' is defined but never used.","'calc' is assigned a value but never used.","'moment' is defined but never used.","'useRef' is defined but never used.","'setSuggestions' is assigned a value but never used.","'message' is defined but never used.","'Select' is defined but never used.","'setColumns' is assigned a value but never used.",["223"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},"Update the dependencies array to be: [props]",{"range":"229","text":"230"},"Update the dependencies array to be: [getData]",{"range":"231","text":"232"},{"range":"233","text":"232"},[1493,1495],"[props]",[1367,1369],"[getData]",[1604,1606]]